# CodeArts Docker Build Task Configuration for CVSS System
# This task builds Docker images and deploys using Docker Compose

version: '3.8'

stages:
  - name: "Docker Build and Deploy"
    steps:
      - name: "Install Docker"
        action: "shell"
        inputs:
          script: |
            #!/bin/bash
            set -e
            
            echo "=== Installing Docker ==="
            
            # Update system
            yum update -y
            
            # Install Docker
            yum install -y yum-utils
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            
            # Start Docker
            systemctl start docker
            systemctl enable docker
            
            # Add user to docker group
            usermod -aG docker cvss || echo "User cvss not found, will create later"
            
            echo "‚úÖ Docker installed successfully"
            
      - name: "Build Docker Images"
        action: "shell"
        inputs:
          script: |
            #!/bin/bash
            set -e
            
            echo "=== Building Docker Images ==="
            
            # Create application user if not exists
            useradd -r -s /bin/bash -d /opt/cvss-system cvss || echo "User already exists"
            usermod -aG docker cvss
            
            # Setup directories
            mkdir -p /opt/cvss-system
            chown -R cvss:cvss /opt/cvss-system
            
            # Copy application files
            cp -r backend /opt/cvss-system/
            cp -r frontend /opt/cvss-system/
            cp -r docker /opt/cvss-system/
            chown -R cvss:cvss /opt/cvss-system
            
            # Build Docker images
            cd /opt/cvss-system
            
            # Build backend image
            echo "Building backend image..."
            docker build -f docker/Dockerfile.backend -t cvss-backend:latest .
            
            # Build frontend image
            echo "Building frontend image..."
            docker build -f docker/Dockerfile.frontend -t cvss-frontend:latest .
            
            echo "‚úÖ Docker images built successfully"
            
      - name: "Deploy with Docker Compose"
        action: "shell"
        inputs:
          script: |
            #!/bin/bash
            set -e
            
            echo "=== Deploying with Docker Compose ==="
            
            cd /opt/cvss-system
            
            # Stop existing containers
            docker-compose -f docker/docker-compose.prod.yml down || echo "No existing containers"
            
            # Start services
            docker-compose -f docker/docker-compose.prod.yml up -d
            
            # Wait for services to start
            echo "Waiting for services to start..."
            sleep 60
            
            # Check service status
            echo "Checking service status..."
            docker-compose -f docker/docker-compose.prod.yml ps
            
            # Health check
            echo "Running health checks..."
            
            # Check backend
            if curl -f http://localhost:5000/api/health > /dev/null 2>&1; then
                echo "‚úÖ Backend health check passed"
            else
                echo "‚ùå Backend health check failed"
                docker-compose -f docker/docker-compose.prod.yml logs backend
                exit 1
            fi
            
            # Check frontend
            if curl -f http://localhost:3000 > /dev/null 2>&1; then
                echo "‚úÖ Frontend health check passed"
            else
                echo "‚ùå Frontend health check failed"
                docker-compose -f docker/docker-compose.prod.yml logs frontend
                exit 1
            fi
            
            echo ""
            echo "üéâ CVSS System deployed successfully with Docker!"
            echo ""
            echo "üìä Application URLs:"
            echo "  Backend: http://localhost:5000"
            echo "  Frontend: http://localhost:3000"
            echo ""
            echo "üìù Docker Management:"
            echo "  Status: docker-compose -f docker/docker-compose.prod.yml ps"
            echo "  Logs: docker-compose -f docker/docker-compose.prod.yml logs"
            echo "  Stop: docker-compose -f docker/docker-compose.prod.yml down"
            echo ""
            echo "‚úÖ Docker deployment completed successfully!"
