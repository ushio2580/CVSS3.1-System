# Docker Compose for Production Deployment
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cvss-postgres
    environment:
      POSTGRES_DB: cvss_db
      POSTGRES_USER: cvss_user
      POSTGRES_PASSWORD: cvss_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cvss_user -d cvss_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: cvss-backend
    environment:
      DATABASE_URL: postgresql://cvss_user:cvss_password@postgres:5432/cvss_db
      SQLALCHEMY_DATABASE_URI: postgresql://cvss_user:cvss_password@postgres:5432/cvss_db
      JWT_SECRET_KEY: your-production-jwt-secret-key-here
      FLASK_ENV: production
      FLASK_DEBUG: "False"
      SECRET_KEY: your-production-secret-key-here
      CORS_ORIGINS: http://0.0.0.0:5000
      MAX_CONTENT_LENGTH: "16777216"
      UPLOAD_FOLDER: uploads
      API_VERSION: v1
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: cvss-frontend
    environment:
      VITE_API_URL: http://0.0.0.0:5000/api
      VITE_APP_NAME: CVSS Scoring System
      VITE_APP_VERSION: 1.0.0
      VITE_DEV_MODE: "false"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  backend_uploads:
  backend_logs:
