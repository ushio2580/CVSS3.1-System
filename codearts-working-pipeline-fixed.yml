version: '3.8'

stages:
  - name: "Deploy CVSS System"
    steps:
      - name: "Run Deployment"
        action: "shell"
        inputs:
          script: |
            #!/bin/bash
            echo "ðŸš€ Starting CVSS System deployment..."
            
            # Update system
            yum update -y
            
            # Install Python 3.12
            yum install -y epel-release
            yum install -y python3.12 python3.12-pip python3.12-devel
            ln -sf /usr/bin/python3.12 /usr/bin/python3
            
            # Install Node.js 18
            curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
            yum install -y nodejs
            
            # Install PostgreSQL
            yum install -y postgresql postgresql-server postgresql-devel
            postgresql-setup initdb
            systemctl start postgresql
            systemctl enable postgresql
            
            # Create database
            sudo -u postgres psql << EOF
            CREATE DATABASE cvss_db;
            CREATE USER cvss_user WITH PASSWORD 'cvss_password';
            GRANT ALL PRIVILEGES ON DATABASE cvss_db TO cvss_user;
            \q
            EOF
            
            # Install build tools
            yum groupinstall -y "Development Tools"
            yum install -y git curl wget unzip gcc gcc-c++ make
            
            # Create application user
            useradd -r -s /bin/bash -d /opt/cvss-system cvss
            
            # Setup directories
            mkdir -p /opt/cvss-system
            mkdir -p /var/log/cvss-system
            chown -R cvss:cvss /opt/cvss-system
            chown -R cvss:cvss /var/log/cvss-system
            
            # Copy application files (they're already in the workspace)
            cp -r backend /opt/cvss-system/
            cp -r frontend /opt/cvss-system/
            chown -R cvss:cvss /opt/cvss-system
            
            # Setup backend
            cd /opt/cvss-system/backend
            sudo -u cvss python3 -m venv venv
            sudo -u cvss ./venv/bin/pip install --upgrade pip
            sudo -u cvss ./venv/bin/pip install -r requirements.txt
            
            # Create .env file
            sudo -u cvss cat > .env << EOF
            DATABASE_URL=postgresql://cvss_user:cvss_password@localhost:5432/cvss_db
            SQLALCHEMY_DATABASE_URI=postgresql://cvss_user:cvss_password@localhost:5432/cvss_db
            JWT_SECRET_KEY=your-production-jwt-secret-key-here
            FLASK_ENV=production
            FLASK_DEBUG=False
            SECRET_KEY=your-production-secret-key-here
            CORS_ORIGINS=http://0.0.0.0:5000
            MAX_CONTENT_LENGTH=16777216
            UPLOAD_FOLDER=uploads
            API_VERSION=v1
            EOF
            
            # Initialize database
            sudo -u cvss ./venv/bin/python init_db.py
            
            # Setup frontend
            cd /opt/cvss-system/frontend
            sudo -u cvss npm ci
            
            # Create .env file
            sudo -u cvss cat > .env << EOF
            VITE_API_URL=http://0.0.0.0:5000/api
            VITE_APP_NAME=CVSS Scoring System
            VITE_APP_VERSION=1.0.0
            VITE_DEV_MODE=false
            EOF
            
            # Build application
            sudo -u cvss npm run build
            
            # Create systemd services
            cat > /etc/systemd/system/cvss-backend.service << EOF
            [Unit]
            Description=CVSS System Backend
            After=network.target postgresql.service
            
            [Service]
            Type=simple
            User=cvss
            WorkingDirectory=/opt/cvss-system/backend
            Environment=PATH=/opt/cvss-system/backend/venv/bin
            ExecStart=/opt/cvss-system/backend/venv/bin/python run.py
            Restart=always
            RestartSec=10
            StandardOutput=append:/var/log/cvss-system/backend.log
            StandardError=append:/var/log/cvss-system/backend-error.log
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            cat > /etc/systemd/system/cvss-frontend.service << EOF
            [Unit]
            Description=CVSS System Frontend
            After=network.target cvss-backend.service
            
            [Service]
            Type=simple
            User=cvss
            WorkingDirectory=/opt/cvss-system/frontend
            Environment=PATH=/usr/bin:/usr/local/bin
            ExecStart=/usr/bin/npm run dev
            Restart=always
            RestartSec=10
            StandardOutput=append:/var/log/cvss-system/frontend.log
            StandardError=append:/var/log/cvss-system/frontend-error.log
            
            [Install]
            WantedBy=multi-user.target
            EOF
            
            # Reload systemd
            systemctl daemon-reload
            
            # Configure firewall
            yum install -y firewalld
            systemctl start firewalld
            systemctl enable firewalld
            firewall-cmd --permanent --add-port=5000/tcp
            firewall-cmd --permanent --add-port=3000/tcp
            firewall-cmd --permanent --add-port=22/tcp
            firewall-cmd --permanent --add-port=80/tcp
            firewall-cmd --permanent --add-port=443/tcp
            firewall-cmd --reload
            
            # Start services
            systemctl start cvss-backend
            systemctl enable cvss-backend
            systemctl start cvss-frontend
            systemctl enable cvss-frontend
            
            # Health check
            sleep 30
            curl -f http://localhost:5000/api/health
            curl -f http://localhost:3000
            
            echo "âœ… CVSS System deployed successfully!"
            echo "Backend: http://localhost:5000"
            echo "Frontend: http://localhost:3000"
